{
  "name": "locl",
  "version": "0.0.0",
  "license": "AGPL-3.0-or-later",
  "scripts": {
    "ng": "ng",
    "nx": "nx",
    "start": "npm run postinstall.web && ng serve web",
    "build": "npm run postinstall.web && ng build web",
    "test": "npm run postinstall.web && ng test",
    "test.cli": "ng test cli",
    "test.core": "ng test core",
    "lint": "ng lint",
    "e2e": "npm run postinstall.web && ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "commit": "npx git-cz",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "ng update @nrwl/workspace",
    "update:check": "ng update",
    "workspace-schematic": "nx workspace-schematic",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "postinstall": "electron-rebuild install-app-deps && npm run bootstrap",
    "postinstall.electron": "node tools/electron/postinstall",
    "postinstall.web": "node tools/web/postinstall",
    "bootstrap": "lerna bootstrap",
    "postbootstrap": "cd node_modules/lerna-semantic-release && npm install && cd ../..",
    "lerna-semantic-release": "node ./node_modules/lerna-semantic-release/packages/lerna-semantic-release/bin/lerna-semantic-release.js",
    "prerelease": "npm run lerna-semantic-release pre",
    "release": "npm run lerna-semantic-release perform",
    "postrelease": "npm run lerna-semantic-release post",
    "build.electron.app": "npm run prepare.electron.app && ng build electron --prod --base-href ./",
    "build.electron.app.local": "npm run build.electron.app && electron dist/apps/electron",
    "build.electron.app.linux": "npm run build.electron.app && cd dist/apps/electron && npx electron-builder build --linux",
    "build.electron.app.windows": "npm run build.electron.app && cd dist/apps/electron && npx electron-builder build --windows",
    "build.electron.app.mac": "npm run build.electron.app && cd dist/apps/electron && npx electron-builder build --mac",
    "build.cli": "cd libs/cli && npm run build && cd ../../",
    "postbuild.cli": "crlf --set=LF dist/libs/cli/**/*",
    "build.core": "ng build core",
    "build.libs": "npm run build.core && npm run build.cli",
    "postbuild.libs": "npm run postbuild.cli",
    "build.demo": "ng build demo --aot",
    "link.cli": "npm link dist/libs/cli",
    "prepare.electron.app": "npm run postinstall.electron && tsc -p apps/electron/tsconfig.json",
    "serve.electron.app.target": "ng serve electron",
    "serve.electron.app": "wait-on http-get://localhost:4200/ && run-electron apps/electron/src --serve",
    "start.electron.app": "npm run prepare.electron.app && npm-run-all -p serve.electron.app.target serve.electron.app",
    "start.web": "npm run postinstall.web && ng serve web",
    "start.demo": "ng serve demo",
    "clean": "npx rimraf hooks node_modules package-lock.json dist && npm i",
    "locl-extract": "locl extract -s=dist/apps/demo/*.js -f=json -o=dist/i18n/",
    "locl-convert": "locl convert -s=dist/i18n/*.xlf -f=json -o=dist/i18n/converted.json"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "9.1.4",
    "@angular/common": "9.1.4",
    "@angular/compiler": "9.1.4",
    "@angular/core": "9.1.4",
    "@angular/forms": "9.1.4",
    "@angular/localize": "9.1.4",
    "@angular/platform-browser": "9.1.4",
    "@angular/platform-browser-dynamic": "9.1.4",
    "@angular/router": "9.1.4",
    "@locl/scss": "file:libs/scss",
    "bulma": "0.8.0",
    "reflect-metadata": "0.1.13",
    "rxjs": "6.5.5",
    "tslib": "1.10.0",
    "zone.js": "0.10.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.901.4",
    "@angular-devkit/build-ng-packagr": "0.901.4",
    "@angular/cli": "9.1.4",
    "@angular/compiler-cli": "9.1.4",
    "@angular/language-service": "9.1.4",
    "@commitlint/cli": "8.3.5",
    "@commitlint/config-conventional": "8.3.4",
    "@commitlint/config-lerna-scopes": "8.3.4",
    "@nrwl/angular": "8.12.0",
    "@nrwl/cypress": "8.12.0",
    "@nrwl/jest": "8.12.0",
    "@nrwl/workspace": "8.12.0",
    "@nstudio/angular": "8.1.2",
    "@nstudio/electron": "8.1.2",
    "@nstudio/electron-angular": "8.1.2",
    "@nstudio/web": "8.1.2",
    "@nstudio/web-angular": "8.1.2",
    "@nstudio/xplat": "8.1.2",
    "@types/jest": "25.1.0",
    "@types/node": "13.5.1",
    "chalk": "^3.0.0",
    "codelyzer": "5.2.2",
    "commitizen": "4.0.3",
    "commitlint-plugin-body-content": "file:tools/commitlint-plugin-body-content",
    "cpx": "^1.5.0",
    "crlf": "^1.1.1",
    "cypress": "3.8.3",
    "cz-lerna-changelog": "2.0.2",
    "dotenv": "8.2.0",
    "electron": "7.2.4",
    "electron-builder": "22.3.3",
    "electron-installer-dmg": "3.0.0",
    "electron-packager": "14.2.0",
    "electron-rebuild": "1.9.0",
    "electron-reload": "1.5.0",
    "electron-store": "5.1.0",
    "electron-updater": "4.2.1",
    "eslint": "6.8.0",
    "fs-extra": "8.1.0",
    "husky": "4.2.1",
    "jest": "25.1.0",
    "jest-preset-angular": "7.1.1",
    "lerna": "3.20.2",
    "lerna-semantic-release": "git@github.com:ZachCase/lerna-semantic-release#caribou",
    "ng-packagr": "9.1.2",
    "npm-run-all": "4.1.5",
    "prettier": "1.19.1",
    "pretty-quick": "2.0.1",
    "run-electron": "1.0.0",
    "ts-jest": "25.0.0",
    "tsickle": "0.38.1",
    "tslint": "5.20.1",
    "typescript": "3.8.3",
    "wait-on": "4.0.0"
  },
  "xplat": {
    "prefix": "locl",
    "framework": "angular"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-lerna-changelog"
    }
  },
  "husky": {
    "hooks": {
      "prepare-commit-msg": "exec < /dev/tty && git cz --hook || true",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS --verbose",
      "pre-commit": "pretty-quick --staged && npm run lint"
    }
  }
}
